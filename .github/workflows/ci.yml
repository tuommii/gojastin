name: Continuous Delivery
on:
  push:
    branches:
      - production
jobs:
  build:
    runs-on: ubuntu-latest
    name: Compile binary file
    steps:

    - name: Get code
      uses: actions/checkout@v2
      with:
        ref: "production"

    - name: Make directory
      run: mkdir -p deploy/test

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      env:
        GOPROXY: "https://proxy.golang.org"
      with:
        go-version: ^1.14
      id: go

    - name: Build server
      env:
        GOPROXY: "https://proxy.golang.org"
      run: |
        cd cmd/gojastin
        go get ./...
        go build -v -o run .

    - name: Copy binary
      run: cp ./cmd/gojastin/run ./deploy/run

    - name: Name artifact
      uses: actions/upload-artifact@v2
      with:
        name: gojastin
        path: deploy/


  deploy:
      runs-on: ubuntu-latest
      name:  Deploy artifact to Digital Ocean
      needs: build
      steps:

      - name: Download uploaded binary
        uses: actions/download-artifact@v1
        with:
          name: gojastin

      - name: Make executable
        run: chmod +x gojastin/run

      - name: Transfer with SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          source: gojastin
          target: ${{ secrets.WORKDIR }}

      - name: Example command via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: "ls ${{ secrets.WORKDIR }}"
